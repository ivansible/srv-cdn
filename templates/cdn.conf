# Simple CDN
# ansible-managed

# A request can have few optional HTTP headers:
# X-CDN-Host: desired.server.host.com
# X-CDN-Front: desired.front.host.com
# X-CDN-Back: desired.origin.host.com

map $http_x_cdn_front $cdn_front {
    default $http_x_cdn_front;
    ""      $http_host;
}

map $http_x_cdn_back $cdn_back {
    default $http_x_cdn_back;
    ""      $cdn_auto_back;
}

map $cdn_host $cdn_auto_back {
    hostnames;
    default  {{ srv_cdn_default_origin }};
{% for item in srv_cdn_sites %}
    {{ item.server }}  {{ item.origin }};
{% endfor %}
}

map $http_x_cdn_host $cdn_host {
    default $http_x_cdn_host;
    ""      $cdn_front;
}

server {
    server_name
{% for item in srv_cdn_sites if not(item.hidden |default(false) |bool) %}
        {{ item.server }}
{% endfor %}
{% for item in cdn_cloudfront_sites |default([]) %}
        {{ item.url }}  # {{ item.comment }} ({{ item.id }})
{% endfor %}
        ;
    {{ nginx_conf_listen_http }}
{% if nginx_ssl_cert %}
    {{ nginx_conf_listen_ssl }}
    ssl_certificate     {{ nginx_ssl_cert }};
    ssl_certificate_key {{ nginx_ssl_key }};
{% endif %}
    #ssl_early_data on;  # nginx 1.15.4+, needs tls 1.3, possible replay attacks

    location /  {
        # Accept either direct connections (blank forwarded proto) or SSL behind CloudFlare
        if ( $http_x_forwarded_proto !~ "^(https)?$" ) { return 301 "https://$host$uri"; }
        # Uncomment next line after enabling SSL in CloudFlare
        if ( $https != "on" ) { return 301 "https://$host$uri"; }

        proxy_pass https://$cdn_back;
        proxy_ssl_server_name on;
        proxy_redirect "~*^https?://[^/]+/(.*)$" "https://$cdn_front/$1";
        proxy_set_header Host $cdn_back;
        proxy_set_header Referer https://$cdn_back;

        proxy_set_header Accept-Encoding "";

{% for filter in srv_cdn_filters %}
        sub_filter '{{ filter.src }}'  '{{ filter.dst }}';
{% endfor %}
        sub_filter_once off;
        sub_filter_last_modified on;

        root {{ nginx_def_site_dir }};
    }

    include mixin.d/*.conf;
}
