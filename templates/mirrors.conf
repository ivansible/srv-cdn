map $http_host $back_host {
    hostnames;
{% for item in srv_mirror_mirrors %}
    {{ item.server }}  {{ item.origin }};
{% endfor %}
}

server {
    server_name
{% for item in srv_mirror_mirrors %}
{% if item.server != 'default' and not item.hidden |default(false) %}
        {{ item.server }}
{% endif %}
{% endfor %}
        ;
    {{ nginx_conf_listen_http }}
{% if nginx_ssl_cert %}
    {{ nginx_conf_listen_ssl }}
    ssl_certificate     {{ nginx_ssl_cert }};
    ssl_certificate_key {{ nginx_ssl_key }};
{% endif %}
    #ssl_early_data on;  # nginx 1.15.4+, needs tls 1.3, possible replay attacks

    location /  {
        # Accept either direct connections (blank forwarded proto) or SSL behind CloudFlare
        if ( $http_x_forwarded_proto !~ "^(https)?$" ) { return 301 "https://$host$uri"; }
        # Uncomment next line after enabling SSL in CloudFlare
        if ( $https != "on" ) { return 301 "https://$host$uri"; }

        proxy_pass https://$back_host;
        proxy_ssl_server_name on;
        proxy_redirect "~*^https?://[^/]+/(.*)$" "https://$http_host/$1";
        proxy_set_header Host $back_host;
        proxy_set_header Referer https://$back_host;

        proxy_set_header Accept-Encoding "";

        # fix viewport for mobile devices:
        sub_filter '<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">'
                   '<meta name="viewport" content="width=1024">';
        sub_filter_once off;
        sub_filter_last_modified on;

        root {{ nginx_def_site_dir }};
    }

    include bastion.d/*.conf;
}
